AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Medjat Account API
Parameters:
  Versao:
    Type: String
  Env:
    Description: stack environment
    Type: String
  CustomAccessLogFormatParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Custom Access Log for API ApiGateway
    Default: CustomAccessLogFormat
  InternalDomainName:
    Type: String
  VPCEndpointId:
    Type: String
Conditions:
  enableDatadog:
    Fn::Or:
    - Fn::Equals:
      - Ref: Env
      - prd
    - Fn::Equals:
      - Ref: Env
      - hml
  isPrdOrQa:
    Fn::Or:
    - Fn::Equals:
      - Ref: Env
      - prd
    - Fn::Equals:
      - Ref: Env
      - qa
Mappings:
  Network:
    dev:
      Vpc: vpc-0df31a6e2d113d8b7
    hml:
      Vpc: vpc-053bf362926211174
    prd:
      Vpc: vpc-05583dab4737e64fd
  Tag:
    Service:
      value: medjat-account
    Squad:
      value: squad-osiris
    Slack:
      value: core-squad-osiris
    Email:
      value: abydos-osiris@dock.tech
    BusinessUnit:
      value: global
    Platform:
      value: dockone
    Application:
      value: medjat
    Component:
      value: medjat-account-api
    PciScope:
      value: false
    PciClassification:
      value: non-pci
    Owner:
      value: osiris
Resources:
  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /dock/apigateway/medjat-account
      Tags:
      - Key: env
        Value:
          Ref: Env
      - Key: service
        Value:
          Fn::FindInMap:
          - Tag
          - Service
          - value
      - Key: stack
        Value:
          Fn::Sub: ${AWS::StackName}
      - Key: squad
        Value:
          Fn::FindInMap:
          - Tag
          - Squad
          - value
      - Key: slack
        Value:
          Fn::FindInMap:
          - Tag
          - Slack
          - value
      - Key: email
        Value:
          Fn::FindInMap:
          - Tag
          - Email
          - value
      - Key: resource
        Value: log-group
      - Key: business_unit
        Value:
          Fn::FindInMap:
          - Tag
          - BusinessUnit
          - value
      - Key: platform
        Value:
          Fn::FindInMap:
          - Tag
          - Platform
          - value
      - Key: application
        Value:
          Fn::FindInMap:
          - Tag
          - Application
          - value
      - Key: component
        Value:
          Fn::FindInMap:
          - Tag
          - Component
          - value
      - Key: pci_scope
        Value:
          Fn::FindInMap:
          - Tag
          - PciScope
          - value
      - Key: pci_classification
        Value:
          Fn::FindInMap:
          - Tag
          - PciClassification
          - value
      - Key: owner
        Value:
          Fn::FindInMap:
          - Tag
          - Owner
          - value
  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      AlwaysDeploy: true
      StageName: Live
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds:
        - Ref: VPCEndpointId
      Variables:
        apiName: medjat-account-api
      Tags:
        env:
          Ref: Env
        service:
          Fn::FindInMap:
          - Tag
          - Service
          - value
        stack:
          Fn::Sub: ${AWS::StackName}
        squad:
          Fn::FindInMap:
          - Tag
          - Squad
          - value
        slack:
          Fn::FindInMap:
          - Tag
          - Slack
          - value
        email:
          Fn::FindInMap:
          - Tag
          - Email
          - value
        resource: api-gateway
        business_unit:
          Fn::FindInMap:
          - Tag
          - BusinessUnit
          - value
        platform:
          Fn::FindInMap:
          - Tag
          - Platform
          - value
        application:
          Fn::FindInMap:
          - Tag
          - Application
          - value
        component:
          Fn::FindInMap:
          - Tag
          - Component
          - value
        pci_scope:
          Fn::FindInMap:
          - Tag
          - PciScope
          - value
        pci_classification:
          Fn::FindInMap:
          - Tag
          - PciClassification
          - value
        owner:
          Fn::FindInMap:
          - Tag
          - Owner
          - value
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
          - AccessLogGroup
          - Arn
        Format:
          Ref: CustomAccessLogFormatParameter
      MethodSettings:
      - ResourcePath: /*
        HttpMethod: '*'
        MetricsEnabled: true
        DataTraceEnabled: false
        LoggingLevel: INFO
      TracingEnabled: true
      DefinitionBody:
        swagger: '2.0'
        info:
          version: '2018-09-06T21:53:50Z'
          title: medjat-account
        tags:
        - name: medjat-account
          description: Medjat Account API
        schemes:
        - https
        paths:
          /medjat/account/{proxy+}:
            get:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            post:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            put:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            delete:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            patch:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
          /public/medjat/account/{proxy+}:
            get:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            post:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            put:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            delete:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            patch:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/account/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
          /medjat/alias-core/{proxy+}:
            get:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            post:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            put:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            delete:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            patch:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
          /public/medjat/alias-core/{proxy+}:
            get:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            post:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            put:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            delete:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
            patch:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                connectionId:
                  Fn::ImportValue: VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: HTTP_PROXY
                uri:
                  Fn::Sub: https://${InternalDomainName}/public/medjat/alias-core/{proxy}
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
        definitions:
          Empty:
            type: object
            title: Empty Schema
          DockError:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
          BadRequest:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
                  error_details:
                    type: array
                    items:
                      type: object
                      properties:
                        attribute:
                          type: string
                        messages:
                          items:
                            type: string
                          type: array
                  id:
                    type: string
        x-amazon-apigateway-policy:
          Version: '2012-10-17'
          Statement:
          - Effect: Deny
            Principal: '*'
            Action: execute-api:Invoke
            Resource:
              Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*
            Condition:
              StringNotEquals:
                aws:sourceVpc:
                  Fn::FindInMap:
                  - Network
                  - Ref: Env
                  - Vpc
          - Effect: Allow
            Principal: '*'
            Action: execute-api:Invoke
            Resource:
              Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*
            Condition:
              StringEquals:
                aws:sourceVpc:
                  Fn::FindInMap:
                  - Network
                  - Ref: Env
                  - Vpc
        x-amazon-apigateway-gateway-responses:
          UNAUTHORIZED:
            statusCode: 401
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description":
                "Unauthorized", "code": "401"}}'
          ACCESS_DENIED:
            statusCode: 403
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description":
                "Forbidden", "code": "403"}}'
          DEFAULT_4XX:
            statusCode: 404
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description":
                "Resource not found", "code": "404"}}'
          THROTTLED:
            statusCode: 429
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description":
                "Too many requests", "code": "429"}}'
          DEFAULT_5XX:
            statusCode: 500
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description":
                "Internal server error", "code": "500"}}'
