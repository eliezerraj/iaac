AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Medjat Gateway API

Parameters:
  Versao:
    Type: String
  Env:
    Description: stack environment
    Type: String
  CustomAccessLogFormatParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Custom Access Log for APIGateway
    Default: CustomAccessLogFormat
  InternalDomainName:
    Type: String
  VPCEndpointId:
    Type: String

Conditions:
  enableDatadog:
    Fn::Or:
      - Fn::Equals:
          - Ref: Env
          - prd
      - Fn::Equals:
          - Ref: Env
          - hml

  isPrdOrQa:
    "Fn::Or":
      - "Fn::Equals":
          - !Ref Env
          - prd
      - "Fn::Equals":
          - !Ref Env
          - qa

Mappings:
  Network:
    dev:
      Vpc: vpc-0df31a6e2d113d8b7
    hml:
      Vpc: vpc-053bf362926211174
    prd:
      Vpc: vpc-05583dab4737e64fd

  Tag:
    Service:
      value: medjat-gateway
    Squad:
      value: squad-osiris
    Slack:
      value: core-squad-osiris
    Email:
      value: abydos-osiris@dock.tech
    BusinessUnit:
      value: global
    Platform:
      value: dockone
    Application:
      value: medjat
    Component:
      value: medjat-gateway-api
    PciScope:
      value: false
    PciClassification:
      value: non-pci
    Owner:
      value: osiris

Resources:
  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /dock/apigateway/medjat-gateway
      Tags:
        - Key: env
          Value: !Ref Env
        - Key: service
          Value: !FindInMap [Tag, Service, value]
        - Key: stack
          Value: !Sub ${AWS::StackName}
        - Key: squad
          Value: !FindInMap [Tag, Squad, value]
        - Key: slack
          Value: !FindInMap [Tag, Slack, value]
        - Key: email
          Value: !FindInMap [Tag, Email, value]
        - Key: resource
          Value: log-group
        - Key: business_unit
          Value: !FindInMap [Tag, BusinessUnit, value]
        - Key: platform
          Value: !FindInMap [Tag, Platform, value]
        - Key: application
          Value: !FindInMap [Tag, Application, value]
        - Key: component
          Value: !FindInMap [Tag, Component, value]
        - Key: pci_scope
          Value: !FindInMap [Tag, PciScope, value]
        - Key: pci_classification
          Value: !FindInMap [Tag, PciClassification, value]
        - Key: owner
          Value: !FindInMap [Tag, Owner, value]

  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      AlwaysDeploy: true
      StageName: Live
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds:
          - !Ref VPCEndpointId
      Variables:
        apiName: medjat-gateway-api
      Tags:
        env: !Ref Env
        service: !FindInMap [Tag, Service, value]
        stack: !Sub ${AWS::StackName}
        squad: !FindInMap [Tag, Squad, value]
        slack: !FindInMap [Tag, Slack, value]
        email: !FindInMap [Tag, Email, value]
        resource: api-gateway
        business_unit: !FindInMap [Tag, BusinessUnit, value]
        platform: !FindInMap [Tag, Platform, value]
        application: !FindInMap [Tag, Application, value]
        component: !FindInMap [Tag, Component, value]
        pci_scope: !FindInMap [Tag, PciScope, value]
        pci_classification: !FindInMap [Tag, PciClassification, value]
        owner: !FindInMap [Tag, Owner, value]
      AccessLogSetting:
        DestinationArn: !GetAtt [AccessLogGroup, Arn]
        Format: !Ref CustomAccessLogFormatParameter
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: true
          DataTraceEnabled: false
          LoggingLevel: INFO
      TracingEnabled: true
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "2018-09-06T21:53:50Z"
          title: medjat-gateway
        tags:
          - name: "medjat-gateway"
            description: "Medjat Gateway API"
        schemes:
          - "https"
        paths:
          /medjat/setup/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /medjat/account/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /medjat/ledger/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /medjat/gateway/v1/accounts:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/medjat/account/v1/accounts"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /medjat/gateway/v1/accounts/{id}/update-status:
            post:
              produces:
                - application/json
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/medjat/account/v1/accounts/{id}/update-status"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /medjat/gateway/v1/balances:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/v1/balances"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /medjat/gateway/v1/account-details:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/medjat/account/v1/account-details"
          /medjat/gateway/v1/operations:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/medjat/ledger/v1/operations"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /public/medjat/accounts/v1/accounts:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/accounts"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /public/medjat/accounts/v1/accounts/{id}/update-status:
            post:
              produces:
                - application/json
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/accounts/{id}/update-status"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /public/medjat/accounts/v2/accounts/{id}/update-status:
            post:
              produces:
                - application/json
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v2/accounts/{id}/update-status"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /public/medjat/accounts/v1/account-details:
            post:
              produces:
                - application/json
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/account-details"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /public/medjat/account/v1/accounts:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/accounts"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /public/medjat/account/v1/accounts/{id}/list-entries:
            post:
              produces:
                - "application/json"
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/accounts/{id}/entries"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /public/medjat/account/v1/accounts/{id}/update-status:
            post:
              produces:
                - application/json
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/accounts/{id}/update-status"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /public/medjat/account/v2/accounts/{id}/update-status:
            post:
              produces:
                - application/json
              parameters:
                - description: Account-Id
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v2/accounts/{id}/update-status"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
                requestParameters:
                  integration.request.path.id: "method.request.path.id"
          /public/medjat/account/v1/account-details:
            post:
              produces:
                - application/json
              x-amazon-apigateway-integration:
                uri: !Sub "https://${InternalDomainName}/public/medjat/account/v1/account-details"
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                httpMethod: POST
          /public/medjat/alias-core/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/alias-core/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/alias-core/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/alias-core/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/alias-core/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/alias-core/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /public/medjat/setup/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /public/medjat/internal-setup/{proxy+}:
            get:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/internal-setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/internal-setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            put:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PUT
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/internal-setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            delete:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: DELETE
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/internal-setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
            patch:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: PATCH
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri: !Sub "https://${InternalDomainName}/public/medjat/internal-setup/{proxy}"
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
          /public/medjat/ledger/{proxy+}:
            post:
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                connectionId: !ImportValue VpcLinkIdSesh-Non-Pci
                connectionType: VPC_LINK
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: "HTTP_PROXY"
                uri:
                  !If [
                    isPrdOrQa,
                    "",
                    !Sub "https://${InternalDomainName}/public/medjat/ledger/{proxy}",
                  ]
                requestParameters:
                  integration.request.path.proxy: "method.request.path.proxy"
        definitions:
          Empty:
            type: "object"
            title: "Empty Schema"
          DockError:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
                  id:
                    type: string
          BadRequest:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
                  error_details:
                    type: array
                    items:
                      type: object
                      properties:
                        attribute:
                          type: string
                        messages:
                          items:
                            type: string
                          type: array
                  id:
                    type: string
        x-amazon-apigateway-policy:
          Version: "2012-10-17"
          Statement:
            - Effect: "Deny"
              Principal: "*"
              Action: "execute-api:Invoke"
              Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*
              Condition:
                StringNotEquals:
                  aws:sourceVpc: !FindInMap [Network, !Ref Env, Vpc]
            - Effect: "Allow"
              Principal: "*"
              Action: "execute-api:Invoke"
              Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*
              Condition:
                StringEquals:
                  aws:sourceVpc: !FindInMap [Network, !Ref Env, Vpc]
        x-amazon-apigateway-gateway-responses:
          UNAUTHORIZED:
            statusCode: 401
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description": "Unauthorized", "code": "401"}}'
          ACCESS_DENIED:
            statusCode: 403
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description": "Forbidden", "code": "403"}}'
          DEFAULT_4XX:
            statusCode: 404
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description": "Resource not found", "code": "404"}}'
          THROTTLED:
            statusCode: 429
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description": "Too many requests", "code": "429"}}'
          DEFAULT_5XX:
            statusCode: 500
            responseTemplates:
              application/json: '{"error": { "id": "$context.requestId", "description": "Internal server error", "code": "500"}}'
