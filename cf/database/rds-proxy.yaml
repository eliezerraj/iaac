AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: RDS Proxy IaC

Parameters:
  Versao:
    Type: String
    Default: 1

  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - hml
      - prd

  Squad:
    Type: String
    Default: architecture

  Slack:
    Type: String
    Default: architecture

  Email:
    Type: String
    Default: architecture

Mappings:
  Network:
    dev:
      SgRDS: sg-0eec7b010b760677d
      SubnetAZA: subnet-04f9462620240c5c1
      SubnetAZB: subnet-00c7176f1c6f72c32
      SubnetAZC: subnet-0961dd9a7d368e1b0
    hml:
      SgRDS: sg-0eec7b010b760677d
      SubnetAZA: subnet-0fb3b86a8657a696f
      SubnetAZB: subnet-0fb6727ed0041b799
      SubnetAZC: subnet-0c45c1b6d9ba2cfc5
    prd:
      SgRDS: sg-0eec7b010b760677d
      SubnetAZA: subnet-0a0c6c1b76845ca8a
      SubnetAZB: subnet-0d2dc2da1fb208470
      SubnetAZC: subnet-0446d425f47765e5b

  RDS:
    dev:
      RDSIdentifier: db-arch-02
      RDSSecretManagerArn: "arn:aws:secretsmanager:us-east-2:792192516784:secret:992382474575_arch-rds-02-access-ncEwuy"
    hml:
      RDSIdentifier: db-arch-hml
      RDSSecretManagerArn: "arn:aws:secretsmanager:us-east-2:792192516784:secret:992382474575_arch-rds-02-access-ncEwuy"
    prd:
      RDSIdentifier: db-arch-prd
      RDSSecretManagerArn: "arn:aws:secretsmanager:us-east-2:792192516784:secret:992382474575_arch-rds-02-access-ncEwuy"

  Proxy:
    dev:  
      RDSProxyIdentifier: rds-proxy-db-arch-02
      RDSProxyIdleClientTimeout: 3600
      RDSProxyMaxConnectionsPercent: 90
      RDSProxyMaxIdleConnectionsPercent: 50
    hml:
      RDSProxyIdentifier: rds-proxy-db-arch-02-hml
      RDSProxyIdleClientTimeout: 3600
      RDSProxyMaxConnectionsPercent: 90
      RDSProxyMaxIdleConnectionsPercent: 50
    prd:
      RDSProxyIdentifier: rds-proxy-db-arch-02-prd
      RDSProxyIdleClientTimeout: 3600
      RDSProxyMaxConnectionsPercent: 90
      RDSProxyMaxIdleConnectionsPercent: 50

Resources:
  RDSProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      DBProxyName: !FindInMap [Proxy, !Ref Env, RDSProxyIdentifier]
      Auth:
        - AuthScheme: SECRETS
          Description: arch-database-password
          IAMAuth: DISABLED
          SecretArn: !FindInMap [RDS, !Ref Env, RDSSecretManagerArn]
      EngineFamily: POSTGRESQL
      DebugLogging: true
      IdleClientTimeout: !FindInMap [Proxy, !Ref Env, RDSProxyIdleClientTimeout]
      RequireTLS: false
      RoleArn: !GetAtt RDSProxyRole.Arn
      VpcSecurityGroupIds:
        - !FindInMap [Network, !Ref Env, SgRDS]
      VpcSubnetIds:
        - !FindInMap [Network, !Ref Env, SubnetAZA]
        - !FindInMap [Network, !Ref Env, SubnetAZB]
        - !FindInMap [Network, !Ref Env, SubnetAZC]
      Tags:
        - Key: env
          Value: !Ref Env
        - Key: service
          Value: rds-proxy-iac
        - Key: stack
          Value: !Sub ${AWS::StackName}
        - Key: squad
          Value: !Ref Squad
        - Key: slack
          Value: !Ref Slack
        - Key: email
          Value: !Ref Email
        - Key: resource
          Value: iam-role
  
  RDSProxyRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: db-arch-rds-proxy-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "rds.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: db-arch-rds-proxy-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:DescribeSecret"
                Resource: !FindInMap [RDS, !Ref Env, RDSSecretManagerArn]
                Effect: Allow
              - Action:
                - "kms:Decrypt"
                - "kms:DescribeKey"
                Resource: "*"
                Effect: Allow

  RDSProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      TargetGroupName: default
      DBProxyName: !Ref RDSProxy
      DBInstanceIdentifiers: 
        - !FindInMap [ RDS, !Ref Env, RDSIdentifier ]
      ConnectionPoolConfigurationInfo:
        MaxConnectionsPercent: !FindInMap [Proxy, !Ref Env, RDSProxyMaxConnectionsPercent ]
        MaxIdleConnectionsPercent: !FindInMap [Proxy, !Ref Env, RDSProxyMaxIdleConnectionsPercent]

