AWSTemplateFormatVersion: '2010-09-09'
Description: Template to create an S3 for NLB logs

Parameters:
  Versao:
    Type: String
    Default: 0
  Env:
    Type: String
    AllowedValues:
      - dev
      - hml
      - prd
  S3BucketName:
    Description: Bucket Name
    Type: String
  ApplicationName:
    Type: String
    Default: app architecture
  ComponentName:
    Type: String
    Default: s3 nlb-vpce-arch-eks-02
  PciClassificationName:
    Type: String
    Default: non-pci
    AllowedValues:
      - pci
      - pci-connected
      - non-pci
  Owner:
    Type: String
    Default: architecture

Resources:
  NLBLogS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', [!Ref "AWS::AccountId" ,!Ref Env, !Ref S3BucketName, "nlb-log"]]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: GlacierRule
            Prefix: glacier
            Status: Enabled
            ExpirationInDays: 365
            Transitions:
              - TransitionInDays: 90
                StorageClass: "INTELLIGENT_TIERING"
              - TransitionInDays: 180
                StorageClass: GLACIER
      Tags:
      - Key: env
        Value: !Ref Env
      - Key: stack
        Value: !Sub ${AWS::StackName}
      - Key: name
        Value: !Join ['-', [!Ref "AWS::AccountId" ,!Ref Env, !Ref S3BucketName, "-nlb-log"]]
      - Key: resource
        Value: Bucket
      - Key: application
        Value: !Ref ApplicationName
      - Key: component
        Value: !Ref ComponentName
      - Key: owner
        Value: !Ref Owner
      - Key: pci_classification
        Value: !Ref PciClassificationName

  NLBLogS3Policy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NLBLogS3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "delivery.logs.amazonaws.com"
            Action: "s3:PutObject"
            Resource: !Sub "${NLBLogS3.Arn}/*"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

Outputs:
  NLBLogS3Name:
    Value: !Ref NLBLogS3
    Description: The name of the bucket
  NLBLogS3Arn:
    Value: !GetAtt NLBLogS3.Arn
    Description: The buckey ARN