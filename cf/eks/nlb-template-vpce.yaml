AWSTemplateFormatVersion: '2010-09-09'
Description: template 2 loadbalancer

Parameters:
  Env:
    Description: Environment.  
    Type: String
  SubnetIds:
    Type: 'List<String>'
  LoadBalancerType:
    Type: String
    Default: network
    AllowedValues:
      - network
      - application
      - gateway
  Scheme:
    Type: String
    Default: internal
    AllowedValues:
      - internal
      - internet-facing
  IpAddressType:
    Type: String
    Default: ipv4
    AllowedValues:
      - ipv4
      - dualstack
  WebACLArn:
    Type: String
    Default: NoValue
  AccessLogsEnable:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  Application:
    Description:    Please specify the Application. Used for tagging 
    Type:           String
  BusinessUnitName:
    Description:    Please specify the Business Unit Name. Used for tagging  
    Type:           String
  CloudProvider:
    Description:    Please specify the Cloud Provider. Used for tagging
    Type:           String
    Default: aws
    AllowedValues:
      - aws
      - azure
      - gcp
  Component:
    Description:    Please specify the Component. Used for tagging
    Type:           String
  Owner:
    Description:    Please specify the Owner. Used for tagging  
    Type:           String   
  PCIClassification:
    Description:    Please specify the PCI Classification of environment. Used for tagging  
    Type:           String
    Default: non-pci
    AllowedValues:
      - pci
      - pci-connected
      - non-pci    
  PCIScope:
    Description:    Please specify if this environment is PCI Scope or not. Used for tagging  
    Type:           String
    Default: false
    AllowedValues:
      - false
      - true
  Platform:
    Description:    Please specify the Platform. Used for tagging
    Type:           String  

  LoadBalancerName:
    Type: String
  HostedZoneId:
    Type: String
    Default: ""
  DomainName:
    Type: String
    Default: ""
  CustomDNS:
    Description: Record Set DNS to endpoint of Redis
    Type: String
    Default: false
    AllowedValues:
      - false
      - true

# Region = Account AWS 908671954593=Arch
Mappings:
  region:
    us-east-1:
      value: 908671954593
    sa-east-1:
      value: 908671954593
    us-east-2:
      value: 908671954593      

Conditions:
  isAlb: !Equals [!Ref LoadBalancerType, application]
  isAccessLogsEnable: !Equals [!Ref AccessLogsEnable, true]
  isPrd: !Equals [!Ref Env, prd]  
  isCustomDNS: !Equals [!Ref CustomDNS, true]

Resources:
  S3BucketLogs:
    Condition: isAccessLogsEnable
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub lb-logs-${LoadBalancerName}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: BusinessUnitName
          Value: !Ref BusinessUnitName
        - Key: Stack
          Value: !Sub ${AWS::StackName}
        - Key: Owner
          Value: !Ref Owner
        - Key: Platform
          Value: !Ref Platform
        - Key: Application
          Value: !Ref Application
        - Key: Component
          Value: !Ref Component
        - Key: PCIScope
          Value: !Ref PCIScope
        - Key: PCIClassification
          Value: !Ref PCIClassification
        - Key: CloudProvider
          Value: !Ref CloudProvider

  S3LogsBucketPolicy:
    Condition: isAccessLogsEnable  
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ELBAccountLogsPermission
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Sub "${S3BucketLogs.Arn}/*"
            Principal: 
              AWS:
                - !Join
                    - ''
                    - - 'arn:aws:iam::'
                      - !FindInMap  
                          - region
                          - !Ref AWS::Region
                          - value
                      - ':root'
          - Sid: AWSLogDeliveryWrite
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Sub "${S3BucketLogs.Arn}/*"
            Principal: 
              Service:
                - delivery.logs.amazonaws.com

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: !Ref IpAddressType
      Name: !Ref LoadBalancerName
      Scheme: !Ref Scheme
      Subnets: !Ref SubnetIds
      Type: !Ref LoadBalancerType
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true      
        - Key: deletion_protection.enabled
          Value: !If [ isPrd, true, false ]
        - Key: access_logs.s3.enabled
          Value: !Ref AccessLogsEnable           
        -
          !If
            - isAccessLogsEnable
            - Key: access_logs.s3.bucket
              Value: !Ref S3BucketLogs
            - !Ref AWS::NoValue          
      Tags:
        - 
          Key: Env
          Value: !Ref Env
        - 
          Key: BusinessUnitName
          Value: !Ref BusinessUnitName
        - 
          Key: Stack
          Value: !Sub ${AWS::StackName}
        - 
          Key: Owner
          Value: !Ref Owner
        - 
          Key: Platform
          Value: !Ref Platform
        - 
          Key: Application
          Value: !Ref Application
        - 
          Key: Component
          Value: !Ref Component
        - 
          Key: PCIScope
          Value: !Ref PCIScope
        - 
          Key: PCIClassification
          Value: !Ref PCIClassification
        - Key: CloudProvider
          Value: !Ref CloudProvider

  WebACLAssociation:
    Condition: isAlb
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Ref LoadBalancer
      WebACLArn: !Ref WebACLArn

  RecordSet:
    Condition: isCustomDNS
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      AliasTarget:
        HostedZoneId: !GetAtt [LoadBalancer, CanonicalHostedZoneID]
        DNSName: !GetAtt [LoadBalancer, DNSName]

Outputs:
  LoadBalancerArn:
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub ${LoadBalancerName}-Arn
  LoadBalancerDnsName:
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub ${LoadBalancerName}-DNSName
  LoadBalancerCanonicalHostedZoneID:
    Value: !GetAtt LoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Sub ${LoadBalancerName}-CanonicalHostedZoneID